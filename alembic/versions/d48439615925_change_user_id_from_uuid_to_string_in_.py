"""change user_id from uuid to string in chats table

Revision ID: d48439615925
Revises: 087eee637126
Create Date: 2025-10-24 15:56:46.222781

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'd48439615925'
down_revision: Union[str, Sequence[str], None] = '087eee637126'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Convert UUID column to VARCHAR(255) to support Clerk user IDs
    # Using USING clause to convert existing UUID values to string format
    op.execute(
        "ALTER TABLE chats ALTER COLUMN user_id TYPE VARCHAR(255) USING user_id::TEXT"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Note: This downgrade will fail if user_id values are not valid UUIDs
    # (e.g., Clerk user IDs). This is expected as we're converting to support
    # Clerk's string-based user IDs.
    op.execute(
        "ALTER TABLE chats ALTER COLUMN user_id TYPE UUID USING user_id::UUID"
    )
    # ### end Alembic commands ###

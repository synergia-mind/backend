"""update message type

Revision ID: 087eee637126
Revises: f27f75ea4c47
Create Date: 2025-10-23 14:52:04.507718

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '087eee637126'
down_revision: Union[str, Sequence[str], None] = 'f27f75ea4c47'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the enum type first
    messagetype = sa.Enum('user', 'ai', 'system', name='messagetype')
    messagetype.create(op.get_bind(), checkfirst=True)
    
    # Then alter the column to use it
    op.alter_column('messages', 'type',
               existing_type=sa.VARCHAR(length=50),
               type_=messagetype,
               existing_nullable=False,
               postgresql_using='type::messagetype')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Revert column back to VARCHAR
    op.alter_column('messages', 'type',
               existing_type=sa.Enum('user', 'ai', 'system', name='messagetype'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    
    # Drop the enum type
    messagetype = sa.Enum('user', 'ai', 'system', name='messagetype')
    messagetype.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
